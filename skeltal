#!/usr/bin/python3
import os
import re
import sys
import random

# File Code

def preproc(text, name):
  # placeholder
  new_text = ""
  for l in text.split("\n"):
    # This bit doesn't work yet
    # if re.match(r'^$$', l):
    #   exec(l[1:]) 
    #   next
    inserts = l.split('$$')
    new_line = ""
    if len(inserts) % 2 == 1:
      for i in range(len(inserts)):
        new_line += inserts[i] if i % 2 == 0 else eval(inserts[i])
    else:
      new_line = l
    new_text += new_line + "\n"
  return new_text

def read_skel(stype):
  skel_dir = os.environ.get('SKELTAL_DIR')   
  if skel_dir == None:
    print("You need to set your $SKELTAL_DIR. " + spook())
    exit(1)
  fp = os.path.join(skel_dir, stype + ".skel")
  if not os.path.isfile(fp):
    print(fp + " not found. " + spook())
    exit(1)
  contents = ""
  with open(fp, 'r') as fh:
    contents = fh.read()
  return contents

stdout = False
def make_skel(stype, filename):
  if len(stype) == 0:
    print("No specified filetype. " + spook())
    exit(1)
  skel_contents = preproc(read_skel(stype), ("STDOUT" if stdout else filename))
  if stdout:
    print(skel_contents)
    return
  try:
    with open(filename, 'w+') as fh:
      fh.write(skel_contents)
    print(filename + " created. " + spook())
  except:
    print(filename + " cannot be created")
    exit(1)

# Main code

spooky = False
def spook():
  if spooky:
    return random.choice(["Doot.", "Thanks for the calcium.", "Doot Doot!"])
  else:
    return ""

def usage():
  print("Usage: [-t filetype] [--spooky] <filename>")

def get_option(args, option, default):
  if option in args:
    try:
      i = args.index(option)
      return args[i + 1]
    except:
      usage()
      exit(1)
  else:
    return default

if len(sys.argv) < 2:
  print("Usage: [-t filetype] [--spooky] [--stdout] <filename>")
  exit(1)

args = sys.argv
stdout = "--stdout" in args
filename = "" if stdout else args.pop()
spooky = "-s" in args or "--spooky" in args
stype = get_option(args, "-t", filename.split(".")[-1])

make_skel(stype, filename)
